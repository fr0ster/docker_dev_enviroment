# Using Ubuntu as base image.
FROM <OS>:<VERSION>

# Label base
LABEL maintainer="Alex Kislitsa"

# Radare version
ARG R2_VERSION=master
ARG R2_TAG=5.6.8

ENV R2_VERSION ${R2_VERSION}
ENV R2_TAG ${R2_TAG}
ENV R2_PIPE_PY_VERSION ${R2_PIPE_PY_VERSION}

ENV DEBIAN_FRONTEND noninteractive

ENV TZ UTC

RUN echo -e "Building versions:\n\
  R2_VERSION=${R2_VERSION}\n\
  R2_TAG=${R2_TAG}"

# Build radare2 in a volume to minimize space used by build
VOLUME ["/mnt"]

# Install all build dependencies
# Install bindings
# Build and install radare2 on master branch
# Remove all build dependencies
# Cleanup
RUN dpkg --add-architecture i386 && \
  apt-get -y update && \
  apt install -y \
  libc6:i386 \
  libc6-dbg:i386 \
  libc6-dbg \
  lib32stdc++6 \
  g++-multilib \
  cmake \
  pkg-config \
  ipython3 \
  vim \
  net-tools \
  iputils-ping \
  libffi-dev \
  libssl-dev \
  python3-dev \
  python3-pip \
  build-essential \
  ruby \
  ruby-dev \
  tmux \
  strace \
  ltrace \
  nasm \
  wget \
  gdb \
  gdb-multiarch \
  netcat \
  socat \
  git \
  patchelf \
  gawk \
  file \
  python3-distutils \
  python3-dev \
  python3-setuptools \
  libglib2.0-dev \
  libc6-dbg \
  bison \
  rpm2cpio cpio \
  zstd \
  sudo \
  python-is-python3 && \
  apt install locales --reinstall && \
  rm -rf /var/lib/apt/list/*

WORKDIR /mnt

RUN \
  git clone -q --depth 1 https://github.com/radareorg/radare2.git -b ${R2_TAG} && \
  cd radare2 && \
  git checkout -b ${R2_TAG} && \
  ./sys/install.sh --install && \
  apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

# Create non-root user
RUN useradd -m adam && usermod -aG sudo adam

# New added for disable sudo password
RUN echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers

COPY locale.gen /etc/
RUN locale-gen

# Initilise base user
USER adam
WORKDIR /home/adam
ENV HOME /home/adam

COPY .gdbinit ${HOME}/.gdbinit

# Setup r2pm
RUN r2pm init && r2pm update && r2pm -i r2ghidra && \
  echo "export PATH=~/.local/bin:$PATH" >> ${HOME}/.bashrc

RUN \
  pip3 install --upgrade pip && \
  pip3 install r2pipe

RUN \
  pip3 install --upgrade unicorn pwntools ropper ropgadget

RUN \
  git clone https://github.com/matrix1001/heapinspect.git && \
  git clone https://github.com/hugsy/gef.git && \
  git clone https://github.com/longld/peda.git && \
  git clone https://github.com/pwndbg/pwndbg.git

RUN cd pwndbg && ./setup.sh

RUN echo "export LC_ALL=en_US.UTF-8" >> $HOME/.bashrc